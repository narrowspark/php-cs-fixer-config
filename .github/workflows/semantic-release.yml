# https://help.github.com/en/categories/automating-your-workflow-with-github-actions

name: "Semantic Release"

on: # yamllint disable-line rule:truthy
    push:
        branches:
            - "([0-9])?(.{+([0-9]),x}).x"
            - "main"
            - "next"
            - "next-major"
            - "alpha"
            - "beta"

jobs:
    Test:
        name: "PHP ${{ matrix.php-versions }} Test on ubuntu-latest OS with ${{ matrix.dependencies }} dependencies"

        if: "github.repository != 'narrowspark/php-library-template'"

        runs-on: "ubuntu-latest"

        strategy:
            matrix:
                php-versions: ["8.0"]
                dependencies: ["locked"]

        env:
            key: "semantic-release-linux-v1" # change key (version) to clear cache
            extensions: "mbstring"
            ini-values: "date.timezone=Europe/Berlin, assert.exception=1, zend.assertions=1, opcache.enable=1, opcache.enable_cli=0, opcache.optimization_level=-1, opcache.jit=1255, opcache.jit_buffer_size=32M, serialize_precision=14"
            tools: "composer"

        steps:
            - name: "Git checkout"
              uses: actions/checkout@v3
              with:
                  fetch-depth: 2
              env:
                  GIT_COMMITTER_NAME: "GitHub Actions Shell"
                  GIT_AUTHOR_NAME: "GitHub Actions Shell"
                  EMAIL: "github-actions[bot]@users.noreply.github.com"

            - name: "Setup cache environment"
              id: "cache-env"
              uses: "shivammathur/cache-extensions@v1"
              with:
                  php-version: "${{ matrix.php-versions }}"
                  extensions: "${{ env.extensions }}"
                  key: "${{ env.key }}"

            - name: "Cache extensions"
              uses: "actions/cache@v2"
              with:
                  path: "${{ steps.cache-env.outputs.dir }}"
                  key: "${{ steps.cache-env.outputs.key }}"
                  restore-keys: "${{ steps.cache-env.outputs.key }}"

            - name: "Setup PHP"
              uses: "shivammathur/setup-php@v2"
              with:
                  php-version: "${{ matrix.php-versions }}"
                  extensions: "${{ env.extensions }}"
                  ini-values: "${{ env.ini-values }}"
                  tools: "${{ env.tools }}"
                  coverage: "pcov"

            - name: "Setup Problem Matchers for PHP"
              run: "echo '::add-matcher::${{ runner.tool_cache }}/php.json'"

            - name: "Check PHP Version"
              run: "php -v"

            - name: "List all php extensions with versions"
              run: "php -r 'foreach (get_loaded_extensions() as $extension) echo $extension . \" \" . phpversion($extension) . PHP_EOL;'"

            - name: "Configure Container"
              env:
                  GIT_USER_EMAIL: "${{ secrets.GIT_USER_EMAIL }}"
                  GIT_USER_USERNAME: "${{ secrets.GIT_USER_USERNAME }}"
              run: |
                  EMAIL=${GIT_USER_EMAIL:-"github-actions[bot]@users.noreply.github.com"}
                  NAME=${GIT_USER_USERNAME:-"github-actions-shell"}

                  git config --global user.email "${EMAIL}"
                  git config --global user.name "${NAME}"

            - name: "Check Composer Version"
              run: "composer -V"

            - name: "Validate composer.json and composer.json"
              run: "composer validate --strict"

            - name: "Install dependencies with Composer"
              uses: "ramsey/composer-install@v1"
              with:
                  dependency-versions: "${{ matrix.dependencies }}"

            - name: "Setup Problem Matchers for PHPUnit"
              run: "echo '::add-matcher::${{ runner.tool_cache }}/phpunit.json'"

            - name: "Run Test's"
              run: "./vendor/bin/phpunit --verbose"

    Semantic-Release:
        name: "Semantic Release"

        if: "github.repository != 'narrowspark/php-library-template'"

        runs-on: "ubuntu-latest"

        needs: ["Test"]

        steps:
            - uses: actions/checkout@v3
              with:
                  persist-credentials: false

            - name: "Semantic Release"
              uses: "cycjimmy/semantic-release-action@v2"
              with:
                  semantic_version: "17.0.7"
                  extra_plugins: |
                      @semantic-release/changelog@^5.0.1
                      @semantic-release/git@^9.0.0
                      @google/semantic-release-replace-plugin@^1.0.0
                      conventional-changelog-conventionalcommits@^4.3.0
              env:
                  GITHUB_TOKEN: "${{ secrets.SEMANTIC_RELEASE_GITHUB_TOKEN }}"
                  GIT_AUTHOR_NAME: "github-actions-shell"
                  GIT_AUTHOR_EMAIL: "github-actions[bot]@users.noreply.github.com"
                  GIT_COMMITTER_NAME: "github-actions-shell"
                  GIT_COMMITTER_EMAIL: "github-actions[bot]@users.noreply.github.com"
